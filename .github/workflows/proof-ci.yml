name: Proof Engine CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code_proof:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --require-hashes -r spec_pack/requirements.lock.txt

      - name: Install PEC CLI
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Compile Ambition (if present)
        id: compile_ambition
        shell: bash
        run: |
          if [ -f ".pec/ambition.json" ]; then
            echo "ambition_present=true" >> $GITHUB_OUTPUT
            pec ambition validate
            pec ambition compile
            test -f .pec/obligations.lock || { echo "obligations.lock missing after compile"; exit 1; }
          else
            echo "ambition_present=false" >> $GITHUB_OUTPUT
            echo "No .pec/ambition.json; skipping compile"
          fi

      - name: Upload Proof Delta
        if: steps.compile_ambition.outputs.ambition_present == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: proof-delta
          path: .pec/proof_delta.md

      - name: Show Proof Delta in Summary
        if: steps.compile_ambition.outputs.ambition_present == 'true'
        run: |
          echo "## Proof Delta" >> $GITHUB_STEP_SUMMARY
          cat .pec/proof_delta.md >> $GITHUB_STEP_SUMMARY

      - name: Run Proof Engine
        uses: ./
        env:
          PEC_OBLIGATIONS_PATH: .pec/obligations.lock

      - name: Save metrics (optional)
        if: always()
        run: |
          python - << 'PY'
          import json,os,time
          os.makedirs(".proof", exist_ok=True)
          m={"ts":int(time.time()),"workflow":"proof-ci","status":"${{ job.status }}"}
          open(".proof/metrics.json","w").write(json.dumps(m))
          PY

      - name: Upload proof artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: proof-metrics
          path: .proof/metrics.json