name: Proof CI (A2H+S1+S2 strict)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: proof-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  proof:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r spec_pack/requirements.txt || pip install --quiet pyyaml z3-solver

      - name: A2H semantics
        run: python3 spec_pack/tools/a2h_semantics.py --check

      - name: A2H check
        run: python3 spec_pack/tools/a2h_compile.py --check

      - name: S1
        run: python3 spec_pack/tools/run_s1.py

      - name: S2 inject
        run: python3 spec_pack/tools/s2_contradiction.py

      - name: S2 check
        run: python3 spec_pack/tools/s2_check.py

  code_proof:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for diff

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          pip install pip-tools
          pip-compile spec_pack/requirements.txt --generate-hashes -o spec_pack/requirements.lock.txt
          pip install --no-deps --require-hashes -r spec_pack/requirements.lock.txt

      - name: Create .proof directory
        run: mkdir -p .proof

      - name: S1 - Run Verifiers
        run: |
          # In a real run, a2c_code.py would generate the list of obligations
          # For now, we run a representative set
          echo "Running S1 verifiers..."
          python -m pytest --cov=src --cov-report=xml --junitxml=.proof/test-report.xml || echo "Tests failed"
          dmypy run -- src/
          ruff check src --exit-zero --output-file .proof/ruff.json --format json

      - name: S2 - Security and Dependency Scans
        if: success() # Or based on a2c_code.py output
        run: |
          echo "Running S2 verifiers..."
          semgrep --config p/ci --error --json -o .proof/sast.json || true
          cyclonedx-py --format json -o .proof/sbom.json || true

      - name: Assemble Proof Journal
        run: |
          # This is a placeholder for the real journal assembly
          echo '{"evidence": "test_report.xml", "verifier": "pytest"}' > .proof/journal.ndjson
          python spec_pack/tools/merkle_hasher.py .proof --out .proof/merkle.json

      - name: Upload Proof Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: proof-artifacts
          path: .proof/

